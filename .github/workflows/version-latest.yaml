name: üöÄ Build and deploy to Azure-Function-App

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: "branch name"
        required: true
      deploy:
        type: choice
        description: deploy directories to function apps
        options:
          - only_changed_directories
          - all

env:
  WORKING_DIR: services

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  setup:
    runs-on: "ubuntu-latest"
    outputs:
      MATRIX: ${{ env.DIRS }}

    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branchName }}

      - name: list sub-directories
        id: sub-directories
        run: echo "DIRS=$(ls -d services/*/* | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> $GITHUB_ENV
        if: inputs.deploy  == 'all'

      - name: üîç get previous deployment success commit
        id: previous-success-deployment
        uses: SamhammerAG/last-successful-build-action@v4
        with:  
          token: "${{ secrets.GITHUB_TOKEN }}"
          branch: "main"
          workflow: "${{ github.workflow }}"
        if: inputs.deploy == 'only_changed_directories'

      - name: Get changed directories
        id: changed-directories
        uses: tj-actions/changed-files@v42
        with:
          base_sha: ${{ steps.previous-success-deployment.outputs.sha }}
          json: true
          files: |
            ${{ env.WORKING_DIR }}/**
          dir_names: true
          dir_names_max_depth: 3
          escape_json: false
        if: inputs.deploy == 'only_changed_directories'

      - name: ‚ôªÔ∏è Set correct environment
        run: echo "DIRS=${{ toJson(steps.changed-directories.outputs.all_changed_files) }}" >> $GITHUB_ENV
        if: inputs.deploy == 'only_changed_directories'

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  build-and-deploy:
    runs-on: "ubuntu-latest"
    needs: setup
    if: ${{ needs.setup.outputs.MATRIX != '[]' }}
    strategy:
      matrix:
        directory: ${{ fromJson(needs.setup.outputs.MATRIX) }}

    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branchName }}

      - name: üîë Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üîë Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üß∞ Check and copy necessary files
        run: |
          REQUIRED_FILES=(".funcignore" "host.json" "Dockerfile" ".dockerignore" )
          for file in "${REQUIRED_FILES[@]}"; do
            cp "./${{ env.WORKING_DIR }}/${file}" "${{ matrix.directory }}/"
          done

      - name: üîÑ Extract Last Directory Level
        id: get-last-level
        run: |
          LAST_LEVEL=$(echo ${{ matrix.directory }} | xargs -n 1 basename)
          echo "LAST_LEVEL=$LAST_LEVEL" >> "$GITHUB_ENV"
          
      # - name: üîñ New Package Version
      #   run: echo "TAG=${{ steps.read_version.outputs.value }}" >> "$GITHUB_ENV"

      - name: Convert / to .
        run: |
          CUSTOM_MATRIX_DIRECTORY=$(echo "${{ matrix.directory }}" | sed 's/\//./g')
          echo "CUSTOM_MATRIX_DIRECTORY=$CUSTOM_MATRIX_DIRECTORY" >> "$GITHUB_ENV"

      - name: echo
        run: |
          echo "${{ env.CUSTOM_MATRIX_DIRECTORY }}"
          echo "${{ matrix.directory }}"

      - name: echo tag
        run: |
          python -c "import ${{ env.CUSTOM_MATRIX_DIRECTORY }}.project
          version=$(print(${{ env.CUSTOM_MATRIX_DIRECTORY }}.project.__version__)")
          function_name=$(print(${{ env.CUSTOM_MATRIX_DIRECTORY }}.project.function_app_name)")
          echo "TAG=$version" >> "$GITHUB_ENV"  
          echo "FUNCTION_NAME=$function_name" >> "$GITHUB_ENV"  
          # ----------------------------------------------to delete
          echo "$version"
          echo "$function_name"
      
      - name: üê≥ Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ env.LAST_LEVEL }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ env.TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.TAG }}
            type=semver,pattern={{major}},value=${{ env.TAG }}

      - name: üèóÔ∏è Build and push container image to registry
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.directory }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          file: ./${{ matrix.directory }}/Dockerfile

      

      # - name: üöÄ Deploy to Azure Functions
      #   id: deploy-to-functions
      #   uses: Azure/functions-container-action@v1
      #   with:
      #     app-name: ${{ env.LAST_LEVEL }}
      #     image: "ghcr.io/${{ github.repository }}/${{ env.LAST_LEVEL }}:${{ env.TAG }}"
